#!/usr/bin/env node
var mongo = require('../lib/mongo');
var js = require('../lib/javascript');
var async = require('async');
var channelManager = require('../managers/channelManager');

var argv = require('optimist')
  .usage('Deletes a channel (user or place) and all associated documents.\nUsage: $0 [--ignore] [--id channel-id] [--name "full name"] [--email joe@example.com]')
  .check(function(argv) { 
    var count = 0;
    if (argv.id) count++;
    if (argv.name) count++;
    if (argv.email) count++;
    return count === 1;
  })
  .argv;

mongo.initialize(function (error) 
{
  if (error) {
    console.log("Initialization failed:"+js.pp(error));
  }
  else {
    var criterion;
    if (argv.name) { 
      criterion = {name:argv.name};
    }
    else if (argv.id) { 
      criterion = {_id:mongo.ObjectID(argv.id)};
    }
    else if (argv.email) { 
      criterion = {email:argv.email};
    }
    else {
      console.log(argv.help());
      process.exit(-1);
    }

    //console.log("Searching for " + js.pp(criterion));
    mongo.channels.findOne(criterion,function (error,result) {
      if (error) {
        console.log("Failed to find matching channel"+ js.pp(criterion) +": " + js.pp(error));
        //console.log(argv.help());
        mongo.db.close();
        process.exit(-1);
      }
      else if (result && js.classOf(result._id)===mongo.ObjectID) {
        if (argv.ignore) { 
          placeManager.ignorePlace(result._id, function(error) { 
            if (error) {
              console.log("Failed to ignore channel: "+js.pp(error));
            }
            mongo.db.close();
          });
        }
        else {
          channelManager.deleteChannel(result._id, function(error) { 
            if (error) {
              console.log("Failed to delete channel: "+js.pp(error));
            }
            mongo.db.close();
          });
        }
      }
      else {
        console.log("Failed to find matching channel for criterion: "+js.pp(criterion));
        //console.log(argv.help());
        mongo.db.close();
        process.exit(-1);
      }
    });
  }
});

